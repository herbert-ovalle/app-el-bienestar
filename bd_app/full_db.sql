-- MySQL Script generated by MySQL Workbench
-- Wed Feb 19 16:18:40 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema dbAppMovilClie
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `dbAppMovilClie` ;

-- -----------------------------------------------------
-- Schema dbAppMovilClie
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dbAppMovilClie` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_spanish_ci ;
USE `dbAppMovilClie` ;

-- -----------------------------------------------------
-- Table `datosPersonales`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `datosPersonales` ;

CREATE TABLE IF NOT EXISTS `datosPersonales` (
  `idDatosPersonales` INT NOT NULL AUTO_INCREMENT,
  `nombres` VARCHAR(150) NOT NULL,
  `telefono` INT NULL,
  `direccion` VARCHAR(100) NOT NULL DEFAULT '',
  `correoElectronico` VARCHAR(75) NULL,
  `fotografia` VARCHAR(200) NULL,
  `fechaRegistro` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idDatosPersonales`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estados`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `estados` ;

CREATE TABLE IF NOT EXISTS `estados` (
  `idEstados` INT NOT NULL AUTO_INCREMENT,
  `estado` CHAR(60) NOT NULL,
  PRIMARY KEY (`idEstados`))
ENGINE = InnoDB;

CREATE INDEX `ix_estado` ON `estados` (`estado` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `perfiles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `perfiles` ;

CREATE TABLE IF NOT EXISTS `perfiles` (
  `idPerfil` INT NOT NULL AUTO_INCREMENT,
  `nombrePerfil` CHAR(60) NOT NULL,
  `descripcion` VARCHAR(250) NULL,
  PRIMARY KEY (`idPerfil`))
ENGINE = InnoDB;

CREATE INDEX `ix_nombrePerfil` ON `perfiles` (`nombrePerfil` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `usuarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usuarios` ;

CREATE TABLE IF NOT EXISTS `usuarios` (
  `idUsuario` CHAR(30) NOT NULL,
  `dpi` CHAR(13) NOT NULL,
  `idEstados` INT NOT NULL,
  `idDatosPersonales` INT NOT NULL,
  `idPerfil` INT NOT NULL,
  `contrasena` VARCHAR(100) NOT NULL,
  `codigoActivar` VARCHAR(10) NULL,
  PRIMARY KEY (`idUsuario`),
  CONSTRAINT `fk_usuarios_Datos personales1`
    FOREIGN KEY (`idDatosPersonales`)
    REFERENCES `datosPersonales` (`idDatosPersonales`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuarios_estados2`
    FOREIGN KEY (`idEstados`)
    REFERENCES `estados` (`idEstados`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuarios_perfiles1`
    FOREIGN KEY (`idPerfil`)
    REFERENCES `perfiles` (`idPerfil`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_usuarios_Datos personales1_idx` ON `usuarios` (`idDatosPersonales` ASC) VISIBLE;

CREATE INDEX `fk_usuarios_estados2_idx` ON `usuarios` (`idEstados` ASC) VISIBLE;

CREATE INDEX `fk_usuarios_perfiles1_idx` ON `usuarios` (`idPerfil` ASC) VISIBLE;

CREATE UNIQUE INDEX `idUsuarios_UNIQUE` ON `usuarios` (`idUsuario` ASC) VISIBLE;

CREATE UNIQUE INDEX `ix_dpi` ON `usuarios` (`dpi` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `logUsuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `logUsuario` ;

CREATE TABLE IF NOT EXISTS `logUsuario` (
  `idLogUsuario` INT NOT NULL AUTO_INCREMENT,
  `idReferencia` INT NOT NULL,
  `log` JSON NULL,
  `fechaHora` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idLogUsuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `permisosIntranet`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `permisosIntranet` ;

CREATE TABLE IF NOT EXISTS `permisosIntranet` (
  `idPermiso` INT NOT NULL AUTO_INCREMENT,
  `idPerfil` INT NOT NULL,
  `permisosPerfil` JSON NOT NULL,
  PRIMARY KEY (`idPermiso`),
  CONSTRAINT `fk_permisosIntranet_perfiles1`
    FOREIGN KEY (`idPerfil`)
    REFERENCES `perfiles` (`idPerfil`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_permisosIntranet_perfiles1_idx` ON `permisosIntranet` (`idPerfil` ASC) VISIBLE;

CREATE UNIQUE INDEX `idPerfil_UNIQUE` ON `permisosIntranet` (`idPerfil` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `aplicaciones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `aplicaciones` ;

CREATE TABLE IF NOT EXISTS `aplicaciones` (
  `idAplicacion` INT NOT NULL AUTO_INCREMENT,
  `nombreAplicacion` VARCHAR(100) NOT NULL,
  `ruta` VARCHAR(100) NOT NULL,
  `icono` CHAR(60) NOT NULL,
  `estado` TINYINT NOT NULL DEFAULT 1,
  `usuarioCreacion` CHAR(30) NOT NULL,
  `fechaCreacion` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idAplicacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modulos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modulos` ;

CREATE TABLE IF NOT EXISTS `modulos` (
  `idModulo` INT NOT NULL AUTO_INCREMENT,
  `idAplicacion` INT NOT NULL,
  `modulo` VARCHAR(75) NOT NULL,
  `etiqueta` VARCHAR(100) NOT NULL,
  `rutaModulo` CHAR(100) NOT NULL,
  `icono` CHAR(60) NULL,
  `orden` TINYINT NULL,
  `descripcion` VARCHAR(130) NULL,
  `estado` TINYINT NOT NULL DEFAULT 1,
  `fechaRegistro` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idModulo`),
  CONSTRAINT `fk_modulos_aplicaciones1`
    FOREIGN KEY (`idAplicacion`)
    REFERENCES `aplicaciones` (`idAplicacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_modulos_aplicaciones1_idx` ON `modulos` (`idAplicacion` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `accionesModulo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `accionesModulo` ;

CREATE TABLE IF NOT EXISTS `accionesModulo` (
  `idAccion` INT NOT NULL AUTO_INCREMENT,
  `idModulo` INT NOT NULL,
  `accion` CHAR(30) NOT NULL,
  `estado` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idAccion`),
  CONSTRAINT `fk_acciones_modulos1`
    FOREIGN KEY (`idModulo`)
    REFERENCES `modulos` (`idModulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_acciones_modulos1_idx` ON `accionesModulo` (`idModulo` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sessionLogin`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sessionLogin` ;

CREATE TABLE IF NOT EXISTS `sessionLogin` (
  `idSession` INT NOT NULL AUTO_INCREMENT,
  `idUsuario` CHAR(30) NOT NULL,
  `token` VARCHAR(500) NULL,
  `estado` TINYINT NULL,
  `fechaLogeo` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idSession`, `idUsuario`),
  CONSTRAINT `fk_sessionLogin_usuarios1`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `usuarios` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_sessionLogin_usuarios1_idx` ON `sessionLogin` (`idUsuario` ASC) VISIBLE;

CREATE UNIQUE INDEX `idUsuarios_UNIQUE` ON `sessionLogin` (`idUsuario` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `permisosAplicacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `permisosAplicacion` ;

CREATE TABLE IF NOT EXISTS `permisosAplicacion` (
  `idPermisoAplicacion` INT NOT NULL AUTO_INCREMENT,
  `idAplicacion` INT NOT NULL,
  `idPerfil` INT NOT NULL,
  `permisosApp` JSON NULL,
  PRIMARY KEY (`idPermisoAplicacion`),
  CONSTRAINT `fk_aplicaciones_has_permisos_aplicaciones1`
    FOREIGN KEY (`idAplicacion`)
    REFERENCES `aplicaciones` (`idAplicacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_permisosAplicacion_perfiles1`
    FOREIGN KEY (`idPerfil`)
    REFERENCES `perfiles` (`idPerfil`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_aplicaciones_has_permisos_aplicaciones1_idx` ON `permisosAplicacion` (`idAplicacion` ASC) VISIBLE;

CREATE INDEX `fk_permisosAplicacion_perfiles1_idx` ON `permisosAplicacion` (`idPerfil` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `subModulo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subModulo` ;

CREATE TABLE IF NOT EXISTS `subModulo` (
  `idSubmodulo` INT NOT NULL AUTO_INCREMENT,
  `idModulo` INT NOT NULL,
  `subModulo` VARCHAR(100) NOT NULL,
  `etiqueta` VARCHAR(125) NULL,
  `rutaModulo` VARCHAR(100) NOT NULL,
  `icono` CHAR(60) NULL,
  `orden` TINYINT NULL,
  `descripcion` VARCHAR(125) NULL,
  `estado` TINYINT NOT NULL DEFAULT 1,
  `fechaRegistro` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idSubmodulo`),
  CONSTRAINT `fk_submodulo_modulos1`
    FOREIGN KEY (`idModulo`)
    REFERENCES `modulos` (`idModulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_submodulo_modulos1_idx` ON `subModulo` (`idModulo` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `accionesSubModulo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `accionesSubModulo` ;

CREATE TABLE IF NOT EXISTS `accionesSubModulo` (
  `idAccionesSubModulo` INT NOT NULL AUTO_INCREMENT,
  `idSubmodulo` INT NOT NULL,
  `accion` CHAR(30) NOT NULL,
  `estado` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idAccionesSubModulo`),
  CONSTRAINT `fk_accionesSubModulo_submodulo1`
    FOREIGN KEY (`idSubmodulo`)
    REFERENCES `subModulo` (`idSubmodulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_accionesSubModulo_submodulo1_idx` ON `accionesSubModulo` (`idSubmodulo` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `log_usuarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `log_usuarios` ;

CREATE TABLE IF NOT EXISTS `log_usuarios` (
  `idlog_usuario` INT NOT NULL AUTO_INCREMENT,
  `idReferencia` INT NOT NULL COMMENT 'Referencia de la tabla en la que se realizo el login',
  `logUsuario` JSON NULL,
  PRIMARY KEY (`idlog_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `productos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `productos` ;

CREATE TABLE IF NOT EXISTS `productos` (
  `idProducto` INT NOT NULL AUTO_INCREMENT,
  `producto` CHAR(75) NOT NULL,
  `descripcion` VARCHAR(1000) NOT NULL,
  `urlFotografia` CHAR(100) NULL,
  PRIMARY KEY (`idProducto`))
ENGINE = InnoDB;

CREATE INDEX `ix_producto` ON `productos` (`producto` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `subProductos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subProductos` ;

CREATE TABLE IF NOT EXISTS `subProductos` (
  `idSubProducto` INT NOT NULL AUTO_INCREMENT,
  `idProducto` INT NOT NULL,
  `subProducto` VARCHAR(75) NOT NULL,
  `descripcion` VARCHAR(1000) NOT NULL DEFAULT '',
  `urlFotografia` VARCHAR(100) NULL,
  PRIMARY KEY (`idSubProducto`),
  CONSTRAINT `fk_sub_productos_productos1`
    FOREIGN KEY (`idProducto`)
    REFERENCES `productos` (`idProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_sub_productos_productos1_idx` ON `subProductos` (`idProducto` ASC) VISIBLE;

CREATE INDEX `ix_subProducto` ON `subProductos` (`subProducto` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `estadoSolicitud`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `estadoSolicitud` ;

CREATE TABLE IF NOT EXISTS `estadoSolicitud` (
  `idEstado` INT NOT NULL AUTO_INCREMENT,
  `estadoSolicitud` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`idEstado`))
ENGINE = InnoDB;

CREATE INDEX `ix_estadoSolicitud` ON `estadoSolicitud` (`estadoSolicitud` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `solicitudProducto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `solicitudProducto` ;

CREATE TABLE IF NOT EXISTS `solicitudProducto` (
  `idSolicitud` INT NOT NULL AUTO_INCREMENT,
  `idUsuario` CHAR(30) NOT NULL,
  `idSubProducto` INT NOT NULL,
  `idEstado` INT NOT NULL,
  `telefono` INT NULL,
  `otrosDatos` JSON NULL,
  `fechaRegistro` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idSolicitud`),
  CONSTRAINT `fk_solicitud_producto_usuarios1`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `usuarios` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_solicitud_producto_sub_productos1`
    FOREIGN KEY (`idSubProducto`)
    REFERENCES `subProductos` (`idSubProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_solicitud_producto_estado_solicitud1`
    FOREIGN KEY (`idEstado`)
    REFERENCES `estadoSolicitud` (`idEstado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_solicitud_producto_usuarios1_idx` ON `solicitudProducto` (`idUsuario` ASC) VISIBLE;

CREATE INDEX `fk_solicitud_producto_sub_productos1_idx` ON `solicitudProducto` (`idSubProducto` ASC) VISIBLE;

CREATE INDEX `fk_solicitud_producto_estado_solicitud1_idx` ON `solicitudProducto` (`idEstado` ASC) VISIBLE;

USE `dbAppMovilClie` ;

-- -----------------------------------------------------
-- procedure prGuardarUsuario
-- -----------------------------------------------------

USE `dbAppMovilClie`;
DROP procedure IF EXISTS `prGuardarUsuario`;

DELIMITER $$
USE `dbAppMovilClie`$$
CREATE DEFINER=CURRENT_USER() PROCEDURE prGuardarUsuario(
	IN accion varchar(12),
    IN p_idUsuario char(30),
    IN p_nombre VARCHAR(50),
    IN p_telefono INT,
    IN p_direccion varchar(50),
    IN p_usuario VARCHAR(50),
    IN p_correo VARCHAR(100),
    IN p_contrasena VARCHAR(250),
    IN p_idEstado INT,
    IN p_idPerfil INT
)
BEGIN
	DECLARE usuario_existente INT;
    DECLARE correo_existe INT;
    
    /*-- EXCEPCIONES*/
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		/*-- OBTENER LA CONDICION DEL ERROR*/
		GET DIAGNOSTICS CONDITION 1
			/*-- ASIGNACION RESPUESTAS A VARIABLES GLOBALES*/
			@estadoSql   = RETURNED_SQLSTATE,
			@numeroError = MYSQL_ERRNO,
			@txtMensaje  = MESSAGE_TEXT;
		/*-- ASIGNACION Y FORMATEO DE VARIABLES PARA RESPUESTA*/
		SET @detalle_error = CONCAT("ERROR ", @numeroError, " (", @estadoSql, "): ", @txtMensaje);
		/*-- RESPUESTA AL USUARIO*/
		SELECT 'danger' AS 'respuesta', 'Error en BD' AS 'mensaje', @detalle_error AS 'detalleError';
	END;
    
	IF accion = 'insert' THEN
		-- Verificar si el usuario ya existe
		SELECT COUNT(*) INTO usuario_existente
			FROM usuarios
		WHERE usuario = p_usuario;
        SELECT COUNT(*) INTO correo_existe
			FROM datosPersonales
		WHERE correoElectronico = p_correo;
		
		-- Si el usuario no existe, insertarlo en la tabla
		IF usuario_existente = 0 AND correo_existe = 0 THEN
			INSERT INTO datosPersonales(nombres, telefono, direccion, correoElectronico) 
			VALUES (p_nombre, p_telefono, p_direccion, p_correo);

			SET @idDatosPersonales = LAST_INSERT_ID();

			INSERT INTO usuarios(idUsuarios, dpi, idEstados, idDatosPersonales, idPerfil, contrasena) 
			VALUES (p_idUsuario, p_usuario, p_idEstado, p_idPerfil, @idDatosPersonales, p_idPerfil, p_contrasena);

			SELECT 'Usuario creado exitosamente.' AS mensaje, 'success' AS respuesta, LAST_INSERT_ID() AS 'id', NULL AS 'detalleError';
		ELSE
			SELECT 'El usuario ya existe.' AS 'mensaje', 'info' AS 'respuesta';
		END IF;
	ELSEIF accion = "update" THEN
		UPDATE usuarios
		SET idPerfil = p_idPerfil
			WHERE idUsuarios = p_idUsuario;
		
        SELECT 'Actualizado Correctamente' AS 'mensaje', 'success' AS 'respuesta', NULL AS 'detalleError';
        
	ELSEIF accion = "delete" THEN
		UPDATE usuarios SET idEstados = 5 WHERE idUsuarios = p_idUsuario;
		UPDATE sessionlogin SET estado = 0 WHERE idUsuarios = p_idUsuario;
		
        SELECT 'Eliminado Correctamente' AS 'mensaje', 'success' AS 'respuesta', NULL AS 'detalleError';
        
	ELSEIF accion = "cambioEstado" THEN
		UPDATE usuarios SET idEstados = p_idEstado  WHERE idUsuarios = p_idUsuario;
		DELETE FROM sessionlogin WHERE idUsuarios = p_idUsuario;
		
        SELECT 'Actualizado Correctamente' AS mensaje, 'success' AS 'respuesta', NULL AS 'detalleError';
	END IF;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure prLogin
-- -----------------------------------------------------

USE `dbAppMovilClie`;
DROP procedure IF EXISTS `prLogin`;

DELIMITER $$
USE `dbAppMovilClie`$$
CREATE PROCEDURE prLogin(
	IN _usuario varchar(100),
    IN _contrasena varchar(200)
)
BEGIN
	DECLARE _login char(30);
    DECLARE _contra varchar(200);
    
    /*-- EXCEPCIONES*/
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		/*-- OBTENER LA CONDICION DEL ERROR*/
		GET DIAGNOSTICS CONDITION 1
			/*-- ASIGNACION RESPUESTAS A VARIABLES GLOBALES*/
			@estadoSql   = RETURNED_SQLSTATE,
			@numeroError = MYSQL_ERRNO,
			@txtMensaje  = MESSAGE_TEXT;
		/*-- ASIGNACION Y FORMATEO DE VARIABLES PARA RESPUESTA*/
		SET @detalle_error = CONCAT("ERROR ", @numeroError, " (", @estadoSql, "): ", @txtMensaje);
		/*-- RESPUESTA AL USUARIO*/
		SELECT 'danger' AS 'respuesta', 'Error en BD' AS 'mensaje', @detalle_error AS 'detalleError';
	END;
    
	SELECT contrasena INTO _contra FROM usuarios WHERE usuario = _usuario AND idEstados = 1;
    
    IF ISNULL(_contra) THEN
		SELECT 'Usuario Incorrecto o Desactivado.' AS 'mensaje', 'info' AS 'respuesta', NULL AS 'detalleError';
    ELSE
		SELECT idUsuarios INTO _login FROM usuarios WHERE usuario = _usuario;
		
        SELECT 'Logeado exitosamente.' AS 'mensaje', 'success' AS 'respuesta', 'contra' AS 'contrasena', 'login' AS 'idUsuario', NULL AS 'detalleError';
    END IF;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure prSession
-- -----------------------------------------------------

USE `dbAppMovilClie`;
DROP procedure IF EXISTS `prSession`;

DELIMITER $$
USE `dbAppMovilClie`$$
CREATE DEFINER=CURRENT_USER() PROCEDURE prSession(
	IN _accion varchar(10),
    IN _idSession INT,
	IN _idUsuario CHAR(30),
    IN _token varchar(500),
    IN _estado INT
)
BEGIN

	/*-- EXCEPCIONES*/
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		/*-- OBTENER LA CONDICION DEL ERROR*/
		GET DIAGNOSTICS CONDITION 1
			/*-- ASIGNACION RESPUESTAS A VARIABLES GLOBALES*/
			@estadoSql   = RETURNED_SQLSTATE,
			@numeroError = MYSQL_ERRNO,
			@txtMensaje  = MESSAGE_TEXT;
		/*-- ASIGNACION Y FORMATEO DE VARIABLES PARA RESPUESTA*/
		SET @detalle_error = CONCAT("ERROR ", @numeroError, " (", @estadoSql, "): ", @txtMensaje);
		/*-- RESPUESTA AL USUARIO*/
		SELECT 'danger' AS 'respuesta', 'Error en BD' AS 'mensaje', @detalle_error AS 'detalleError';
	END;

	DELETE FROM sessionLogin WHERE idUsuarios = _idUsuario;
    IF _accion = 'insert' THEN
		INSERT INTO sessionLogin (idUsuarios, token, estado) VALUES (_idUsuario, _token, _estado);
		SELECT 'Logeado exitosamente.' AS 'mensaje', 'success' AS 'respuesta', LAST_INSERT_ID() AS 'idSession', NULL AS 'detalleError';
	ELSEIF _accion = 'update' THEN
		UPDATE sessionLogin SET token = _token WHERE idSession = _idSession;
        SELECT 'Actualizado correctamente' AS 'mensaje', 'success' AS respuesta, LAST_INSERT_ID() AS 'idSession', NULL AS 'detalleError';
    ELSEIF _accion = 'delete' THEN
		DELETE  FROM sessionLogin  WHERE idSession = _idSession;
        SELECT 'Eliminado correctamente' AS 'mensaje', 'success' AS respuesta, LAST_INSERT_ID() AS 'idSession', NULL AS 'detalleError';
    END IF;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `estados`
-- -----------------------------------------------------
START TRANSACTION;
USE `dbAppMovilClie`;
INSERT INTO `estados` (`idEstados`, `estado`) VALUES (1, 'Activo');
INSERT INTO `estados` (`idEstados`, `estado`) VALUES (2, 'Inactivo');
INSERT INTO `estados` (`idEstados`, `estado`) VALUES (5, 'Eliminado');
INSERT INTO `estados` (`idEstados`, `estado`) VALUES (3, 'Activar Contraseña');

COMMIT;


-- -----------------------------------------------------
-- Data for table `perfiles`
-- -----------------------------------------------------
START TRANSACTION;
USE `dbAppMovilClie`;
INSERT INTO `perfiles` (`idPerfil`, `nombrePerfil`, `descripcion`) VALUES (2, 'Administrador', NULL);
INSERT INTO `perfiles` (`idPerfil`, `nombrePerfil`, `descripcion`) VALUES (3, 'Invitado', NULL);
INSERT INTO `perfiles` (`idPerfil`, `nombrePerfil`, `descripcion`) VALUES (1, 'S. Administrador', 'La administracion general de la aplicación');

COMMIT;


-- -----------------------------------------------------
-- Data for table `permisosIntranet`
-- -----------------------------------------------------
START TRANSACTION;
USE `dbAppMovilClie`;
INSERT INTO `permisosIntranet` (`idPermiso`, `idPerfil`, `permisosPerfil`) VALUES (1, 1, '{\n    \"modulos\": [\n        {\n            \"modulo\": \"inicio\",\n            \"rutaModulo\": \"/inicio\",\n            \"etiqueta\": \"Inicio\",\n            \"icono\": \"fa-solid fa-house\",\n            \"descripcion\": \"Es el inicio de la aplicación\",\n            \"orden\": 1,\n            \"estado\": 1\n        },\n        {\n            \"modulo\": \"mantenimiento\",\n            \"rutaModulo\": \"/mantenimiento\",\n            \"etiqueta\": \"Manteniminto Perfiles\",\n            \"icono\": \"fa-solid fa-gear\",\n            \"descripcion\": \"Mantenimiento de la aplicación\",\n            \"orden\": 3,\n            \"estado\": 1,\n            \"subModulos\": [],\n            \"acciones\": {\n                \"nuevoPerfil\": 0,\n                \"nuevoModuloIntra\": 0,\n                \"asignarModulosPerfil\": 0,\n                \"eliminarModulo\": 0\n            }\n        },\n        {\n            \"modulo\": \"regUsuario\",\n            \"rutaModulo\": \"/usuario\",\n            \"etiqueta\": \"Usuarios Intranet\",\n            \"icono\": \"fa-solid fa-user-plus\",\n            \"descripcion\": \"Registro de usuario\",\n            \"orden\": 2,\n            \"estado\": 1,\n            \"subModulos\": [],\n            \"acciones\": {\n                \"editar\": 0,\n                \"eliminar\": 0,\n                \"ver\": 0\n            }\n        },\n        {\n            \"modulo\": \"aplicaciones\",\n            \"etiqueta\": \"Aplicaciones\",\n            \"icono\": \"fa-solid fa-desktop\",\n            \"descripcion\": \"Aplicaciones\",\n            \"rutaModulo\": \"/aplicaciones\",\n            \"orden\": 4,\n            \"estado\": 1,\n            \"subModulos\": [\n                {\n                    \"modulo\": \"aplicaciones\",\n                    \"subModulo\": \"aplicacion\",\n                    \"rutaModulo\": \"/app\",\n                    \"etiqueta\": \"App\",\n                    \"icono\": \"fa-solid fa-desktop\",\n                    \"descripcion\": \"Sub modulo de pruebas\",\n                    \"orden\": 1,\n                    \"estado\": 1,\n                    \"acciones\": {\n                        \"editar\": 0,\n                        \"eliminar\": 0,\n                        \"ver\": 0\n                    }\n                }\n            ]\n        }\n    ],\n    \"aplicaciones\": []\n}');

COMMIT;


-- -----------------------------------------------------
-- Data for table `productos`
-- -----------------------------------------------------
START TRANSACTION;
USE `dbAppMovilClie`;
INSERT INTO `productos` (`idProducto`, `producto`, `descripcion`, `urlFotografia`) VALUES (1, 'Ahorros', 'Ahorros Cooperativa El Bienestar', NULL);
INSERT INTO `productos` (`idProducto`, `producto`, `descripcion`, `urlFotografia`) VALUES (2, 'Préstamos', 'Préstamos Cooperativa El Bienestar', NULL);
INSERT INTO `productos` (`idProducto`, `producto`, `descripcion`, `urlFotografia`) VALUES (3, 'Seguros', 'Seguros Cooperativa el Bienestar', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `subProductos`
-- -----------------------------------------------------
START TRANSACTION;
USE `dbAppMovilClie`;
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (1, 1, 'Ahorro Disponible', 'Ofrece un manejo seguro y fácil sobre tus ahorros, excelente tasa de interés y acceso a tu dinero en cualquier momento. Incluye tarjeta de débito VISA internacional sin costo de membresía, seguro contra fraudes y muchos beneficios más.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (2, 1, 'Ahorro Programado', 'Ideal para mayores de edad que buscan hacer crecer su dinero. Con depósitos mensuales, esta cuenta te ofrece intereses cada mes, ayudándote a alcanzar tus metas en plazos de 1 a 5 años, utiliza el débito automático para mantener tus ahorros al día.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (3, 1, 'Ahorro a Plazo Fijo', 'Disfruta de una inversión confiable que maximiza tus ahorros sin riesgos y con grandes beneficios totalmente gratis; elige el plazo que mejor se adapte a tus metas: 90, 180, 365, 540 o 730 días. Respaldado por nuestra solidez financiera de 63 años.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (4, 1, 'Aportaciones', 'Conviértete en asociado y disfruta de los beneficios de la Cooperativa. Las aportaciones te otorgan el derecho de participar en la toma de decisiones en la asamblea anual ordinaria. Obtén una atractiva tasa de interés desde el primer día, con intereses acumulados anualmente.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (5, 1, 'Cuenta Joven', 'Una cuenta para jóvenes de 13 a 17 años, para crear el buen hábito de ahorrar. Los ahorros generan ganancias desde el primer día y se acumulan anualmente. Empieza a construir tu futuro, a organizar tus finanzas y a alcanzar tus metas.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (6, 1, 'Peque Cuenta', 'Una cuenta diseñada para niñas y niños de 0 a 13 años, enséñales a construir un gran futuro descubriendo la mejor manera de ahorrar y obteniendo beneficios exclusivos como la participación en la asamblea infantil, la escuelita del bienestarcito y programas educativos.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (7, 2, 'Micro-Crédito', 'Diseñado para fortalecer tu capital de trabajo, ampliación de negocio o emprendimiento. Pocos requisitos, sin fiador y cuotas accesibles.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (8, 2, 'Crédito Mi Consumo', 'Perfecto para cubrir gastos personales o adquirir activos como inmuebles y vehículos. Ofrece cuotas niveladas e intereses sobre saldos, con plazos de hasta 60 meses para activos y gastos médicos, y hasta 36 meses para consolidación de deudas.\n\nAdmite garantías fiduciarias, hipotecarias, mixtas y de ahorros, con pagos mensuales sin descuentos administrativos.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (9, 2, 'Crédito Mi Comercio', 'Hecho para emprendedores y empresarios. Ideal para capital de trabajo y adquisición de activos, plazos según destino del crédito, baja tasa de interés, asesoría y beneficios gratis.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (10, 2, 'Crédito Automático', 'Una opción flexible y rápida, ideal para necesidades de vivienda, comercio, agricultura, ganadería, industria manufacturera y gastos personales. Ofrece plazos según destino del crédito, con intereses sobre saldos y cuotas fijas.\n\nTeniendo como garantía tus ahorros y aportaciones.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (11, 2, 'Crédito Mi Vivienda', 'La solución ideal para financiar tus proyectos de construcción, compra de terreno, vivienda, remodelación, ampliación de tu hogar o negocio. Con tasas de interés competitivas, cuotas accesibles, seguro y avalúo gratis. Además, te brindamos asesoría y atención personalizada.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (12, 2, 'Crédito Agricultura', 'Te brindamos el capital de trabajo para la compra de semillas, insumos y materia prima, así como para la adquisición de activos fijos, incluyendo terrenos productivos, ganado, instalaciones y equipo necesario para el crecimiento de tu negocio agrícola. Con plazos adaptados al uso del crédito, intereses sobre saldos y cuotas fijas.\n\nPara que tu negocio o empresa siga en buen desarrollo.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (13, 2, 'Crédito Grupal', 'Apoyamos a mujeres emprendedoras ofreciéndoles capital de trabajo para impulsar sus negocios, ya sean formales o informales. Financiamiento hasta Q.30,000.00 con grupos de hasta 5 integrantes, brindando una oportunidad accesible para crecer juntas y alcanzar sus metas.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (14, 3, 'Seguro de Vehículos', 'Asegura tu tranquilidad con nuestra cobertura completa para vehículos. Nuestro seguro ofrece respaldo contra accidentes, vuelcos, colisiones y robo, además de protección para ocupantes ante cualquier eventualidad.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (15, 3, 'Seguro Infanto Juvenil', 'Garantiza el bienestar de los más jóvenes con una cobertura diseñada para brindar tranquilidad a toda la familia. Nuestro seguro protege ante situaciones imprevistas, ofreciendo respaldo financiero en caso de accidentes o enfermedades, para que tus hijos crezcan seguros y protegidos en cada etapa de su desarrollo.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (16, 3, 'Seguro Individual o Familiar', 'Asegura el bienestar y la tranquilidad de tu familia con un respaldo económico completo en caso de pérdida. Este seguro protege tanto al asociado como a sus seres queridos, con beneficio de indemnización por fallecimiento. Además, permite incluir a tu cónyuge e hijos en la misma póliza, con una tarifa más accesible que contratar seguros individuales para cada uno.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (17, 3, 'Seguro Vida Saludable', 'Seguro de vida colectivo que tiene como fin proveer protección y respaldo económico para cubrir las necesidades básicas del núcleo familiar dependiente ante la pérdida de la vida o inconveniencia del asegurado.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (18, 3, 'Seguro de Transporte', 'Brinda protección a los propietarios de vehículos destinados al transporte público extraurbano, para garantizar un pago indemnizatorio a los pasajeros que, a consecuencia de un hecho de tránsito, fueran afectados con lesiones, incapacidad e incluso el fallecimiento. Este seguro está diseñado para cumplir con lo estipulado en el art. 29 de la Ley de tránsito. Decreto 132-96 y específicamente a la regulación establecida en los Acuerdos Gubernativos No. 265-001 y 392-2001, referente a la obligatoriedad de seguro en el transporte extraurbano de pasajeros.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (19, 3, 'Seguro Mancomunado', 'Brinda protección y beneficios a dos personas como cónyuges, padres e hijos, en un mismo plan de seguro de vida con una cobertura más completa.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (20, 3, 'Seguro de Accidentes Edad de Oro', 'Brinda protección y tranquilidad a asegurados de Cooperativa El Bienestar, mayores de 50 años al momento de un accidente, tiene coberturas en muerte accidental, fracturas y quemaduras.', NULL);
INSERT INTO `subProductos` (`idSubProducto`, `idProducto`, `subProducto`, `descripcion`, `urlFotografia`) VALUES (21, 3, 'Seguro Cáncer', 'Es un mecanismo de apoyo y respaldo económico que se brinda al asociado en caso de que este reciba por primera vez en su vida un diagnóstico de cáncer.', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `estadoSolicitud`
-- -----------------------------------------------------
START TRANSACTION;
USE `dbAppMovilClie`;
INSERT INTO `estadoSolicitud` (`idEstado`, `estadoSolicitud`) VALUES (1, 'Pendiente');
INSERT INTO `estadoSolicitud` (`idEstado`, `estadoSolicitud`) VALUES (2, 'Aprobada');
INSERT INTO `estadoSolicitud` (`idEstado`, `estadoSolicitud`) VALUES (3, 'No Aplica');
INSERT INTO `estadoSolicitud` (`idEstado`, `estadoSolicitud`) VALUES (5, 'Cancelada');

COMMIT;

